{"version":3,"sources":["components/Explorer.js","components/App.js","index.js"],"names":["Explorer","props","useFilePicker","accept","openFileSelector","filesContent","loading","language","displayName","value","onChange","className","class","onClick","map","file","index","name","content","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","App","useState","html","setHtml","css","setCss","js","setjs","srcDoc","title","sandbox","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQA+EeA,EAtEE,SAACC,GAGd,MAAsDC,YAAc,CAChEC,OAAQ,SADZ,mBAAOC,EAAP,YAA2BC,EAA3B,EAA2BA,aAI3B,GAJA,EAAyCC,QAKrC,OAAO,6CAKX,IACIC,EAIAN,EAJAM,SACAC,EAGAP,EAHAO,YACAC,EAEAR,EAFAQ,MACAC,EACAT,EADAS,SAQJ,OACI,sBAAKC,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAf,UACA,oBAAIC,MAAM,YAAV,SAAuBJ,IAEnB,wBAAQI,MAAM,uBAAuBC,QAAS,WAC1CT,KADJ,SAGI,mBAAGQ,MAAM,+BAGZP,EAAaS,KAAI,SAACC,EAAMC,GAAP,OACd,8BACKD,EAAKE,UAGd,wBAAQL,MAAM,uBAAuBC,QAAS,WAEtCR,EAAaS,KAAI,SAACC,EAAMC,GAAP,OACbN,EAASK,EAAKG,aAH1B,SAOI,mBAAGN,MAAM,gCAIjB,cAAC,aAAD,CACIO,eAjCZ,SAAsBC,EAAQC,EAAMZ,GAChCC,EAASD,IAiCDA,MAAOA,EACPE,UAAU,UACVW,QACI,CACIC,cAAc,EACdC,MAAM,EACNC,KAAMlB,EACNmB,aAAa,EACbC,MAAO,kBClBhBC,MAlDf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAoBJ,mBAAS,IAA7B,mBAAOK,EAAP,KAAWC,EAAX,KAGMC,EAAM,gCAEFN,EAFE,+BAGDE,EAHC,iCAIAE,EAJA,6BAWZ,OACE,sBAAKvB,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,CACEJ,SAAS,MACTC,YAAY,OACZC,MAAOqB,EACPpB,SAAUqB,IACZ,cAAC,EAAD,CACExB,SAAS,MACTC,YAAY,MACZC,MAAOuB,EACPtB,SAAUuB,IACZ,cAAC,EAAD,CACE1B,SAAS,aACTC,YAAY,KACZC,MAAOyB,EACPxB,SAAUyB,IACZ,qBAAKxB,UAAU,cAAf,SACE,8BACGyB,SAKP,sBAAKzB,UAAU,YAAf,UACE,wBAAQyB,OAAQA,EAAQC,MAAM,SAASC,QAAQ,gBAAgBC,MAAM,OAAOC,OAAO,QADrF,gBCvCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e819ceeb.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { useFilePicker } from 'use-file-picker';\r\n\r\nconst Explorer = (props) => {\r\n\r\n\r\n    const [openFileSelector, { filesContent, loading }] = useFilePicker({\r\n        accept: '.txt',\r\n    });\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n\r\n\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props\r\n\r\n    function handleChange(editor, data, value) {\r\n        onChange(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='explorer'>\r\n            <div className='title'>\r\n            <h1 class=\"ui header\">{displayName}</h1>\r\n                \r\n                <button class=\"ui icon button small\" onClick={() => {\r\n                    openFileSelector()\r\n                }}>\r\n                    <i class=\"folder open outline icon\"></i>\r\n                </button>\r\n\r\n                {filesContent.map((file, index) => (\r\n                    <div>\r\n                        {file.name}\r\n                    </div>\r\n                ))}\r\n                <button class=\"ui icon button small\" onClick={() => {\r\n                    {\r\n                        filesContent.map((file, index) => (\r\n                            onChange(file.content)\r\n                        ))\r\n                    }\r\n                }}>\r\n                    <i class=\"angle double down icon\"></i>\r\n                </button>\r\n\r\n            </div>\r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"wrapper\"\r\n                options={\r\n                    {\r\n                        lineWrapping: true,\r\n                        lint: true,\r\n                        mode: language,\r\n                        lineNumbers: true,\r\n                        theme: 'material'\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Explorer;","import React, { useState } from 'react';\nimport Explorer from './Explorer';\n\nfunction App() {\n  const [html, setHtml] = useState('')\n  const [css, setCss] = useState('')\n  const [js, setjs] = useState('')\n\n\n  const srcDoc = `\n  <html>\n    <body>${html}</body>\n    <style>${css}</style>\n    <script>${js}</script>\n  </html>\n  `\n\n\n\n  \n  return (\n    <div className=\"App\">\n      <div className=\"code-editor\">\n        <Explorer\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml} />\n        <Explorer\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss} />\n        <Explorer\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setjs} />\n        <div className=\"codeDisplay\">\n          <pre>\n            {srcDoc}\n          </pre>\n        </div>\n\n      </div>\n      <div className=\"live-view\" >\n        <iframe srcDoc={srcDoc} title=\"output\" sandbox=\"allow-scripts\" width=\"100%\" height=\"220\" />\n        Output\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}